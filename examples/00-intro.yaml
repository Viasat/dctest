name: Example Suite

env:
  BAZ: ${{ 1 + 1 }}

tests:

  passing:
    name: Passing test
    steps:
      - exec: node1
        run: /bin/true
      - exec: node1
        env:
          FOO: bar
        run: |
          [ "${FOO}" == "bar" ]
        repeat: { retries: 3, interval: '1s' }
      - exec: node1
        if: success()
        run: echo "This will be run!"
      - exec: node1
        if: failure()
        run: echo "This will NOT be run!"

  inside-outside:
    name: Inside and outside test
    steps:
      - exec: node1
        run: echo 'inside node1' && hostname && pwd
      - exec: :host
        shell: bash
        run: echo 'outside compose' && hostname && pwd
      - exec: node1
        run: ["echo", "array", "of", "arguments"]
      - exec: :host
        run: ["echo", "array", "of", "arguments"]

  expressions:
    name: Expressions test
    env:
      BAR: ${{ 1 + 1 }}
    steps:
      - exec: node1
        run: |
          [ "2" == "${{ 1 + 1 }}" ]
      - exec: node1
        run: |
          [ "2" == "${BAR}" ]
      - exec: node1
        env:
          FOO: ${{ env.BAZ }}
        run: |
          [ "2" == "${{ env.FOO }}" ]
      - exec: ${{ env.CONTAINER }}
        env:
          CONTAINER: node1
        run: |
          [ "" == "${FOO}" ]

  fail-exit-code:
    name: Failing due to non-zero exit code
    steps:
      - exec: node1
        run: echo "some leading stdout"
      - exec: node1
        run: /bin/false
      - exec: node1
        run: echo 'This step is skipped'
      - exec: node1
        if: failure()
        run: echo "This step WILL be run!"

  fail-signal:
    name: Failing due to INT signal
    steps:
      - exec: :host
        run: kill -s INT $$
      - exec: node1
        run: echo 'This step is skipped'

  maybe-skipped:
    name: Skipped test (unless running with --continue-on-error)
    steps:
      - exec: node1
        run: /bin/true

  fail-nonexistent-container:
    name: Test nonexistent container
    steps:
      - exec: node2
        run: /bin/true
