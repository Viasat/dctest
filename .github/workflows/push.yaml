name: Push

on:
  push: {}
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch: {}

jobs:

  cljs-tests:
    name: Run CLJS tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with: { submodules: 'recursive', fetch-depth: 0 }

      - name: Install NPM
        run: npm install

      - name: Run Tests
        run: ./test/runtests


  test-examples:
    name: Test Examples
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with: { submodules: 'recursive', fetch-depth: 0 }

      - name: Build Image
        run: |
          docker build -t dctest .

      - name: Setup Fixtures
        run: |
          docker-compose -f examples/docker-compose.yaml up -d

      - name: Run Examples
        run: |
          # Some examples demonstate failure.
          # Swallow exit code and check the result counts.
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v $(pwd)/examples:/app/examples \
            dctest --results-file /app/examples/results.json examples /app/examples/00-intro.yaml \
            || true
          jq '[.pass == 2, .fail == 1] | all' examples/results.json

      - name: Run Examples with --continue-on-error
        run: |
          # Some examples demonstate failure.
          # Swallow exit code and check the result counts.
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v $(pwd)/examples:/app/examples \
            dctest --continue-on-error --results-file /app/examples/results.json examples /app/examples/00-intro.yaml \
            || true
          jq '[.pass == 3, .fail == 3] | all' examples/results.json


      - name: Setup Fixtures
        if: always()
        run: |
          docker-compose -f examples/docker-compose.yaml down -t 1 --remove-orphans
