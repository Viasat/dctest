name: Example Suite

env:
  BAZ: ${{ 1 + 1 }}

tests:

  passing:
    name: Passing test
    steps:
      - exec: node1
        run: /bin/true
      - exec: node1
        env:
          FOO: bar
        run: |
          [ "${FOO}" == "bar" ]
      - exec: node1
        if: success()
        run: echo "This will be run!"
      - exec: node1
        if: failure()
        run: echo "This will NOT be run!"

  inside-outside:
    name: Inside and outside test
    steps:
      - exec: node1
        run: echo 'inside node1' && hostname && pwd
      - exec: :host
        shell: bash
        run: echo 'outside compose' && hostname && pwd
      - exec: node1
        run: ["echo", "array", "of", "arguments"]
      - exec: :host
        run: ["echo", "array", "of", "arguments"]

  expressions:
    name: Expressions test
    env:
      BAR: ${{ 1 + 1 }}
    steps:
      - exec: node1
        run: |
          [ "2" == "${{ 1 + 1 }}" ]
      - exec: node1
        run: |
          [ "2" == "${BAR}" ]
      - exec: node1
        env:
          FOO: ${{ env.BAZ }}
        run: |
          [ "2" == "${{ env.FOO }}" ]
      - exec: ${{ env.CONTAINER }}
        env:
          CONTAINER: node1
        run: |
          [ "" == "${FOO}" ]

  expect-assertions:
    name: Expect test
    steps:
      - exec: node1
        run: echo -n "2"
        expect: step.stdout == "2"
      - exec: node1
        run: |
          echo -n '{"a": {"b": 3}, "c": "Hello World", "d": [1, 2, 3]}'
        expect:
          - fromJSON(step.stdout).a.b == 3
          - contains(fromJSON(step.stdout).c, "World")
          - fromJSON(step.stdout).d.count() == 3

  repeat:
    name: Repeat test
    steps:
      - exec: node1
        run: rm -f repeat-test-file

      - name: Repeat on non-zero exit code
        exec: node1
        repeat: { retries: 2, interval: '1s' }
        run: |
          if [ ! -f repeat-test-file ]; then
            touch repeat-test-file
            exit 1
          fi

      - exec: node1
        run: rm -f repeat-test-file

      - name: Repeat on failed expect assertion
        exec: node1
        repeat: { retries: 2, interval: '1s' }
        run: |
          if [ ! -f repeat-test-file ]; then
            touch repeat-test-file
          else
            echo -n 'Repeated successfully'
          fi
        expect:
          - step.stdout == "Repeated successfully"

      - exec: node1
        run: rm -f repeat-test-file
