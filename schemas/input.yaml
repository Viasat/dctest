$defs:
  interval: { type: string, pattern: "^\\s*((\\d+)m)?((\\d+)s)?\\s*$" }
  env:
    type: object
    propertyNames: { type: string }
    additionalProperties: { type: string, expression: InterpolatedText }
  outputs:
    type: object
    propertyNames: { type: string }
    additionalProperties: { type: string, expression: InterpolatedText }

# suite
type: object
additionalProperties: false
required: []
properties:
  env:  { "$ref": "#/$defs/env" }
  name: { type: string, expression: InterpolatedText }
  tests:
    type: object
    additionalProperties:

      # test
      type: object
      additionalProperties: false
      required: []
      properties:
        env:  { "$ref": "#/$defs/env" }
        name: { type: string, expression: InterpolatedText }
        outputs: { "$ref": "#/$defs/outputs" }
        depends:
          oneOf:
            - type: string
            - type: array
              items:
                oneOf: [ { type: string }, { type: object } ]
        steps:
          type: array
          items:

            # step
            type: object
            additionalProperties: false
            required: [ exec, run ]
            properties:
              env:  { "$ref": "#/$defs/env" }
              exec: { type: string, expression: InterpolatedText }
              expect:
                oneOf:
                  - { type: string, expression: Expression }
                  - { type: array, items: { type: string, expression: Expression } }
              name: { type: string, expression: InterpolatedText }
              id: { type: string }
              if: { type: string, expression: Expression, default: "success()" }
              index: { type: integer }
              outputs: { "$ref": "#/$defs/outputs" }
              run:
                oneOf:
                  - { type: string, expression: InterpolatedText }
                  - { type: array, items: { type: string, expression: InterpolatedText } }
              repeat:
                type: object
                additionalProperties: false
                required: []
                properties:
                  interval: { "$ref": "#/$defs/interval", default: "1s" }
                  retries:  { type: integer } # no default (infinite retries)
                default: { retries: 0 } # do not retry, if repeat is missing
              shell: { type: string, enum: ["sh", "bash"], default: "sh" }
